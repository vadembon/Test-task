{"version":3,"file":"static/js/715.4e8fa9f9.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/hooks/usePersistedState.js","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.js","components/UserList/UserList.styled.js","components/UserList/UserList.js","pages/Tweets.js","../node_modules/numeral/numeral.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useEffect } from 'react';\n\nconst usePersistedState = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    const persistedState = localStorage.getItem(key);\n\n    return persistedState !== null ? JSON.parse(persistedState) : defaultValue;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\nexport default usePersistedState;\n","import styled from 'styled-components';\nimport bgImg from '../../images/picture.png';\n\nexport const CardBox = styled.div`\n  position: relative;\n  padding: 28px 0;\n  text-align: center;\n  width: 380px;\n  height: 460px;\n  background-image: url(${bgImg});\n\n  background-repeat: no-repeat;\n  background-position: 36px 28px;\n`;\n\nexport const LineAvatar = styled.div`\n  position: absolute;\n  top: 214px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 380px;\n  height: 8px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const BgAvatar = styled.div`\n  position: absolute;\n  top: -36px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const ImgAvatar = styled.img`\n  margin: 9px auto;\n  display: block;\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nexport const NameTitle = styled.h2`\n  margin-top: 284px;\n\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const TweetTitle = styled.p`\n  margin-top: 16px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\nexport const FollowerTitle = styled.p`\n  margin-top: 16px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const Btn = styled.button`\n  margin-top: 26px;\n\n  width: 196px;\n  height: 50px;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n\n  text-transform: uppercase;\n\n  :hover {\n    box-shadow: inset 1px 1px 27px 5px #4b2a99;\n  }\n`;\n","import numeral from 'numeral';\nimport usePersistedState from 'components/hooks/usePersistedState';\n\nimport {\n  CardBox,\n  ImgAvatar,\n  LineAvatar,\n  BgAvatar,\n  NameTitle,\n  TweetTitle,\n  FollowerTitle,\n  Btn,\n} from './UserCard.styled';\n\nconst TweetCard = ({ user }) => {\n  const [followState, setFollowState] = usePersistedState(\n    `followState-${user.id}`,\n\n    {\n      isFollowing: false,\n      followersCount: user.followers,\n    }\n  );\n\n  const handleFollowClick = () => {\n    const { isFollowing, followersCount } = followState;\n\n    setFollowState({\n      isFollowing: !isFollowing,\n      followersCount: isFollowing ? followersCount - 1 : followersCount + 1,\n    });\n  };\n\n  const { isFollowing, followersCount } = followState;\n\n  const { name, tweets, avatar } = user;\n\n  return (\n    <CardBox>\n      <LineAvatar>\n        <BgAvatar>\n          <ImgAvatar src={avatar} alt={`Avatar of ${name}`} />\n        </BgAvatar>\n      </LineAvatar>\n      <NameTitle>{name}</NameTitle>\n      <TweetTitle>{tweets} Tweets</TweetTitle>\n      <FollowerTitle>\n        {numeral(followersCount).format('0,0')} Followers\n      </FollowerTitle>\n      <Btn\n        onClick={handleFollowClick}\n        style={{\n          backgroundColor: isFollowing ? '#5CD3A8' : '#EBD8FF',\n          color: '#373737',\n        }}\n      >\n        {isFollowing ? 'Following' : 'Follow'}\n      </Btn>\n    </CardBox>\n  );\n};\n\nexport default TweetCard;\n","import styled from 'styled-components';\n\nexport const CardList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 268px);\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  grid-gap: 16px;\n  margin: 0px auto;\n\n  padding: 28px 0;\n  list-style: none;\n`;\n\nexport const CardItem = styled.li`\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const BtnLoadMore = styled.button`\n  display: block;\n  margin: 0 auto;\n\n  width: 196px;\n  height: 50px;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  color: #373737;\n  background-color: #5cd3a8;\n  text-transform: uppercase;\n  :hover {\n    box-shadow: inset 1px 1px 27px 5px #4b2a99;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport TweetCard from 'components/UserCard/UserCard';\nimport { CardList, BtnLoadMore, CardItem } from './UserList.styled';\n\nconst TweetsList = () => {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [tweetsPerPage] = useState(3);\n  const [tweetsToShow, setTweetsToShow] = useState([]);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\n          'https://644bd9684bdbc0cc3a9c42d4.mockapi.io/users/'\n        );\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [tweetsPerPage]);\n\n  const indexOfLastTweet = currentPage * tweetsPerPage;\n\n  useEffect(() => {\n    setTweetsToShow(users.slice(0, indexOfLastTweet));\n  }, [users, indexOfLastTweet]);\n\n  const loadMoreTweets = () => {\n    setTweetsToShow([\n      ...tweetsToShow,\n      ...users.slice(indexOfLastTweet, indexOfLastTweet + tweetsPerPage),\n    ]);\n    setCurrentPage(currentPage + 1);\n  };\n\n  return (\n    <main>\n      <CardList>\n        {users &&\n          tweetsToShow.map(user => (\n            <CardItem key={user.id}>\n              <TweetCard user={user} />\n            </CardItem>\n          ))}\n      </CardList>\n      {tweetsToShow.length < users.length && (\n        <BtnLoadMore onClick={loadMoreTweets}>Load More</BtnLoadMore>\n      )}\n    </main>\n  );\n};\n\nexport default TweetsList;\n","import TweetsList from 'components/UserList/UserList';\n\nconst Tweets = () => {\n  return (\n    <>\n      <TweetsList />\n    </>\n  );\n};\n\nexport default Tweets;\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","defaultValue","useState","persistedState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","CardBox","styled","bgImg","LineAvatar","BgAvatar","ImgAvatar","NameTitle","TweetTitle","FollowerTitle","Btn","user","usePersistedState","id","isFollowing","followersCount","followers","followState","setFollowState","name","tweets","avatar","src","alt","numeral","format","onClick","style","backgroundColor","color","CardList","CardItem","BtnLoadMore","users","setUsers","currentPage","setCurrentPage","tweetsPerPage","tweetsToShow","setTweetsToShow","fetchUsers","fn","fetch","response","json","data","console","self","this","args","arguments","apply","err","undefined","indexOfLastTweet","slice","map","length","define","_","VERSION","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","_input","_value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","roundingFunction","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","leadingCount","abbr","trillion","billion","million","thousand","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","toString","split","toFixed","delimiters","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","toLowerCase","localeData","Error","reset","property","register","type","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","warn","trim","e","substr","clone","inputString","formatFunction","round","set","add","corrFactor","cback","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","unformatRegex","concat","filter","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray"],"sourceRoot":""}